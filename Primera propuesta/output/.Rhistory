levels(dataset$job_type) <- c("C","PC")
levels(dataset$sick_leave_b) <- c("False", "True")
levels(dataset$educ_level)
levels(dataset$job_type)
levels(dataset$sick_leave_b)
dataset$city <- str_to_title(dataset$city)
dataset$city <- gsub("De","de",dataset$city)
dataset$sex <- toupper(gsub(" ","",dataset$sex,fixed=TRUE))
dataset$sex <- factor(dataset$sex)
levels(dataset$sex)
dataset$happiness <- as.numeric(gsub(",",".",dataset$happiness))
summary(dataset$happiness)
summary(dataset$age)
summary(dataset$seniority)
summary(dataset$sick_leave)
summary(dataset$work_hours)
dataset$work_hours <- abs(dataset$work_hours) #canviamos los valores de la variable por su valor absoluto
summary(dataset$work_hours)
summary(dataset$cho_initial)
summary(dataset$cho_final)
dataset$seniority <- ifelse((dataset$age-dataset$seniority) < 18, dataset$age- 18, dataset$seniority)
dataset$sick_leave_b <- ifelse(dataset$sick_leave > 0, 1, 0)
dataset$sick_leave_b <- factor(dataset$sick_leave_b)
levels(dataset$sick_leave_b) <- c("False", "True")
summary(dataset$happiness)
dataset <- kNN(dataset, variable = c("happiness"), k=1) #k-Nearest Neighbour Imputation
summary(dataset$happiness)
boxplot(dataset$happiness,
main = "Boxplot Hapiness",
xlab= "Hapiness",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$happiness) #mediana
mean(dataset$happiness) #promedio
boxplot(dataset$age,
main = "Age",
xlab= "Age",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$age) #mediana
mean(dataset$age) #promedio
boxplot(dataset$seniority,
main = "Seniority",
xlab= "Seniority",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$seniority) #mediana
mean(dataset$seniority) #promedio
boxplot(dataset$sick_leave,
main = "Sick_leave",
xlab= "Sick_leave",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$sick_leave) #mediana
mean(dataset$sick_leave) #promedio
boxplot(dataset$work_hours,
main = "Work_hors",
xlab= "Work_hors",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
boxplot.stats(dataset$work_hours)
median(dataset$work_hours) #mediana
mean(dataset$work_hours) #promedio
boxplot(dataset$cho_initial,
main = "Cho_initial",
xlab= "Cho_initial",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = FALSE)
median(dataset$cho_initial) #mediana
mean(dataset$cho_initial) #promedio
boxplot(dataset$cho_final,
main = "Cho_final",
xlab= "Cho_final",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$cho_final) #mediana
mean(dataset$cho_final) #promedio
scatter.smooth(x=dataset$age, y=dataset$happiness, xlab = "Age", ylab = "Happiness", main="Hapiness ~ Age")
scatter.smooth(x=dataset$seniority, y=dataset$happiness, xlab = "Seniority", ylab = "Happiness", main="Hapiness ~ Seniority")
scatter.smooth(x=dataset$sick_leave, y=dataset$happiness, xlab = "Sick Leave", ylab = "Happiness", main="Hapiness ~ Sick Leave")
scatter.smooth(x=dataset$work_hours, y=dataset$happiness, xlab = "Work Hours", ylab = "Happiness", main="Hapiness ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$happiness, xlab = "Cho_initial", ylab = "Happiness", main="Hapiness ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$happiness, xlab = "Cho_final", ylab = "Happiness", main="Hapiness ~ Cho_final")
scatter.smooth(x=dataset$seniority, y=dataset$age, xlab = "Seniority", ylab = "Age", main="Age ~ Seniority")
scatter.smooth(x=dataset$sick_leave, y=dataset$age, xlab = "Sick Leave", ylab = "Age", main="Age ~ Sick Leave")
scatter.smooth(x=dataset$work_hours, y=dataset$age, xlab = "Work Hours", ylab = "Age", main="Age ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$age, xlab = "Cho_initial", ylab = "Age", main="Age ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$age, xlab = "Cho_final", ylab = "Age", main="Age ~ Cho_final")
scatter.smooth(x=dataset$sick_leave, y=dataset$seniority, xlab = "Sick Leave", ylab = "Seniority", main="Seniority ~ Sick Leave")
scatter.smooth(x=dataset$work_hours, y=dataset$seniority, xlab = "Work Hours", ylab = "Seniority", main="Seniority ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$seniority, xlab = "Cho_initial", ylab = "Seniority", main="Seniority ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$seniority, xlab = "Cho_final", ylab = "Seniority", main="Seniority ~ Cho_final")
scatter.smooth(x=dataset$work_hours, y=dataset$sick_leave, xlab = "Work Hours", ylab = "Sick_leave", main="Sick_leave ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$sick_leave, xlab = "Cho_initial", ylab = "Sick_leave", main="Sick_leave ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$sick_leave, xlab = "Cho_final", ylab = "Sick_leave", main="Sick_leave ~ Cho_final")
scatter.smooth(x=dataset$cho_initial, y=dataset$work_hours, xlab = "Cho_initial", ylab = "Work_hours", main="Work_hours ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$work_hours, xlab = "Cho_final", ylab = "Work_hours", main="Work_hours ~ Cho_final")
scatter.smooth(x=dataset$cho_final, y=dataset$cho_initial, xlab = "Cho_final", ylab = "Cho_initial", main="Cho_initial ~ Cho_final")
summary(dataset)
library(readr)
library(stringr)
library(VIM)
dataset <- read.csv("rawData.csv", na = "NA", colClasses =c(rep("character",2), rep("numeric",2), "character", rep("numeric",7)))
View(dataset)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(readr)
library(stringr)
library(VIM)
dataset <- read.csv("rawData.csv", na = "NA", colClasses =c(rep("character",2), rep("numeric",2), "character", rep("numeric",7)))
nrow(dataset) #número de variables
dim(dataset) #dimensiones del dataset, nos devuleve el número de registros (filas) y la cantidad de variables (columnas)
names(dataset) #nos devuelve los nombres de las variables del dataset
dataset <- setNames(dataset,tolower(names(dataset)))
names(dataset)
summary(dataset)
dataset$educ_level <- factor(dataset$educ_level)
dataset$job_type <- factor(dataset$job_type)
dataset$sick_leave_b <- factor(dataset$sick_leave_b)
levels(dataset$educ_level)
levels(dataset$job_type)
levels(dataset$sick_leave_b)
levels(dataset$educ_level) <- c("N","P","S","U")
levels(dataset$job_type) <- c("C","PC")
levels(dataset$sick_leave_b) <- c("False", "True")
levels(dataset$educ_level)
levels(dataset$job_type)
levels(dataset$sick_leave_b)
dataset$city <- str_to_title(dataset$city)
dataset$city <- gsub("De","de",dataset$city)
dataset$sex <- toupper(gsub(" ","",dataset$sex,fixed=TRUE))
dataset$sex <- factor(dataset$sex)
levels(dataset$sex)
dataset$happiness <- as.numeric(gsub(",",".",dataset$happiness))
summary(dataset$happiness)
summary(dataset$age)
summary(dataset$seniority)
summary(dataset$sick_leave)
summary(dataset$work_hours)
dataset$work_hours <- abs(dataset$work_hours) #canviamos los valores de la variable por su valor absoluto
summary(dataset$work_hours)
summary(dataset$cho_initial)
summary(dataset$cho_final)
dataset$seniority <- ifelse((dataset$age-dataset$seniority) < 18, dataset$age- 18, dataset$seniority)
dataset$sick_leave_b <- ifelse(dataset$sick_leave > 0, 1, 0)
dataset$sick_leave_b <- factor(dataset$sick_leave_b)
levels(dataset$sick_leave_b) <- c("False", "True")
summary(dataset)
summary(dataset$happiness)
dataset <- kNN(dataset, variable = c("happiness"), k=1) #k-Nearest Neighbour Imputation
summary(dataset$happiness)
summary(dataset)
dataset <- kNN(dataset, variable = c("happiness"), k=15) #k-Nearest Neighbour Imputation
summary(dataset$happiness)
summary(dataset)
dataset <- kNN(dataset, variable = c("happiness"), k=1) #k-Nearest Neighbour Imputation
summary(dataset$happiness)
summary(dataset)
dataset <- kNN(dataset, variable = c("happiness"), k=15) #k-Nearest Neighbour Imputation
summary(dataset$happiness)
summary(dataset)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(readr)
library(stringr)
library(VIM)
dataset <- read.csv("rawData.csv", na = "NA", colClasses =c(rep("character",2), rep("numeric",2), "character", rep("numeric",7)))
nrow(dataset) #número de variables
dim(dataset) #dimensiones del dataset, nos devuleve el número de registros (filas) y la cantidad de variables (columnas)
names(dataset) #nos devuelve los nombres de las variables del dataset
dataset <- setNames(dataset,tolower(names(dataset)))
names(dataset)
summary(dataset)
dataset$educ_level <- factor(dataset$educ_level)
dataset$job_type <- factor(dataset$job_type)
dataset$sick_leave_b <- factor(dataset$sick_leave_b)
levels(dataset$educ_level)
levels(dataset$job_type)
levels(dataset$sick_leave_b)
levels(dataset$educ_level) <- c("N","P","S","U")
levels(dataset$job_type) <- c("C","PC")
levels(dataset$sick_leave_b) <- c("False", "True")
levels(dataset$educ_level)
levels(dataset$job_type)
levels(dataset$sick_leave_b)
dataset$city <- str_to_title(dataset$city)
dataset$city <- gsub("De","de",dataset$city)
dataset$sex <- toupper(gsub(" ","",dataset$sex,fixed=TRUE))
dataset$sex <- factor(dataset$sex)
levels(dataset$sex)
dataset$happiness <- as.numeric(gsub(",",".",dataset$happiness))
summary(dataset$happiness)
summary(dataset$age)
summary(dataset$seniority)
summary(dataset$sick_leave)
summary(dataset$work_hours)
dataset$work_hours <- abs(dataset$work_hours) #canviamos los valores de la variable por su valor absoluto
summary(dataset$work_hours)
summary(dataset$cho_initial)
summary(dataset$cho_final)
dataset$seniority <- ifelse((dataset$age-dataset$seniority) < 18, dataset$age- 18, dataset$seniority)
dataset$sick_leave_b <- ifelse(dataset$sick_leave > 0, 1, 0)
dataset$sick_leave_b <- factor(dataset$sick_leave_b)
levels(dataset$sick_leave_b) <- c("False", "True")
summary(dataset)
summary(dataset$happiness)
dataset <- kNN(dataset, variable = c("happiness"), k=15, imp_var=FALSE) #k-Nearest Neighbour Imputation
summary(dataset$happiness)
summary(dataset)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(readr)
library(stringr)
library(VIM)
dataset <- read.csv("rawData.csv", na = "NA", colClasses =c(rep("character",2), rep("numeric",2), "character", rep("numeric",7)))
nrow(dataset) #número de variables
dim(dataset) #dimensiones del dataset, nos devuleve el número de registros (filas) y la cantidad de variables (columnas)
names(dataset) #nos devuelve los nombres de las variables del dataset
dataset <- setNames(dataset,tolower(names(dataset)))
names(dataset)
summary(dataset)
dataset$educ_level <- factor(dataset$educ_level)
dataset$job_type <- factor(dataset$job_type)
dataset$sick_leave_b <- factor(dataset$sick_leave_b)
levels(dataset$educ_level)
levels(dataset$job_type)
levels(dataset$sick_leave_b)
levels(dataset$educ_level) <- c("N","P","S","U")
levels(dataset$job_type) <- c("C","PC")
levels(dataset$sick_leave_b) <- c("False", "True")
levels(dataset$educ_level)
levels(dataset$job_type)
levels(dataset$sick_leave_b)
dataset$city <- str_to_title(dataset$city)
dataset$city <- gsub("De","de",dataset$city)
dataset$sex <- toupper(gsub(" ","",dataset$sex,fixed=TRUE))
dataset$sex <- factor(dataset$sex)
levels(dataset$sex)
dataset$happiness <- as.numeric(gsub(",",".",dataset$happiness))
summary(dataset$happiness)
summary(dataset$age)
summary(dataset$seniority)
summary(dataset$sick_leave)
summary(dataset$work_hours)
dataset$work_hours <- abs(dataset$work_hours) #canviamos los valores de la variable por su valor absoluto
summary(dataset$work_hours)
summary(dataset$cho_initial)
summary(dataset$cho_final)
dataset$seniority <- ifelse((dataset$age-dataset$seniority) < 18, dataset$age- 18, dataset$seniority)
dataset$sick_leave_b <- ifelse(dataset$sick_leave > 0, 1, 0)
dataset$sick_leave_b <- factor(dataset$sick_leave_b)
levels(dataset$sick_leave_b) <- c("False", "True")
summary(dataset)
summary(dataset$happiness)
dataset <- kNN(dataset, variable = c("happiness"), k=15, imp_var=FALSE) #k-Nearest Neighbour Imputation
summary(dataset$happiness)
boxplot(dataset$happiness,
main = "Boxplot Hapiness",
xlab= "Hapiness",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$happiness) #mediana
mean(dataset$happiness) #promedio
boxplot(dataset$age,
main = "Age",
xlab= "Age",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$age) #mediana
mean(dataset$age) #promedio
boxplot(dataset$seniority,
main = "Seniority",
xlab= "Seniority",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$seniority) #mediana
mean(dataset$seniority) #promedio
boxplot(dataset$sick_leave,
main = "Sick_leave",
xlab= "Sick_leave",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$sick_leave) #mediana
mean(dataset$sick_leave) #promedio
boxplot(dataset$work_hours,
main = "Work_hors",
xlab= "Work_hors",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
boxplot.stats(dataset$work_hours)
median(dataset$work_hours) #mediana
mean(dataset$work_hours) #promedio
boxplot(dataset$cho_initial,
main = "Cho_initial",
xlab= "Cho_initial",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = FALSE)
median(dataset$cho_initial) #mediana
mean(dataset$cho_initial) #promedio
boxplot(dataset$cho_final,
main = "Cho_final",
xlab= "Cho_final",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$cho_final) #mediana
mean(dataset$cho_final) #promedio
scatter.smooth(x=dataset$age, y=dataset$happiness, xlab = "Age", ylab = "Happiness", main="Hapiness ~ Age")
scatter.smooth(x=dataset$seniority, y=dataset$happiness, xlab = "Seniority", ylab = "Happiness", main="Hapiness ~ Seniority")
scatter.smooth(x=dataset$sick_leave, y=dataset$happiness, xlab = "Sick Leave", ylab = "Happiness", main="Hapiness ~ Sick Leave")
scatter.smooth(x=dataset$work_hours, y=dataset$happiness, xlab = "Work Hours", ylab = "Happiness", main="Hapiness ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$happiness, xlab = "Cho_initial", ylab = "Happiness", main="Hapiness ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$happiness, xlab = "Cho_final", ylab = "Happiness", main="Hapiness ~ Cho_final")
scatter.smooth(x=dataset$seniority, y=dataset$age, xlab = "Seniority", ylab = "Age", main="Age ~ Seniority")
scatter.smooth(x=dataset$sick_leave, y=dataset$age, xlab = "Sick Leave", ylab = "Age", main="Age ~ Sick Leave")
scatter.smooth(x=dataset$work_hours, y=dataset$age, xlab = "Work Hours", ylab = "Age", main="Age ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$age, xlab = "Cho_initial", ylab = "Age", main="Age ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$age, xlab = "Cho_final", ylab = "Age", main="Age ~ Cho_final")
scatter.smooth(x=dataset$sick_leave, y=dataset$seniority, xlab = "Sick Leave", ylab = "Seniority", main="Seniority ~ Sick Leave")
scatter.smooth(x=dataset$work_hours, y=dataset$seniority, xlab = "Work Hours", ylab = "Seniority", main="Seniority ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$seniority, xlab = "Cho_initial", ylab = "Seniority", main="Seniority ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$seniority, xlab = "Cho_final", ylab = "Seniority", main="Seniority ~ Cho_final")
scatter.smooth(x=dataset$work_hours, y=dataset$sick_leave, xlab = "Work Hours", ylab = "Sick_leave", main="Sick_leave ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$sick_leave, xlab = "Cho_initial", ylab = "Sick_leave", main="Sick_leave ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$sick_leave, xlab = "Cho_final", ylab = "Sick_leave", main="Sick_leave ~ Cho_final")
scatter.smooth(x=dataset$cho_initial, y=dataset$work_hours, xlab = "Cho_initial", ylab = "Work_hours", main="Work_hours ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$work_hours, xlab = "Cho_final", ylab = "Work_hours", main="Work_hours ~ Cho_final")
scatter.smooth(x=dataset$cho_final, y=dataset$cho_initial, xlab = "Cho_final", ylab = "Cho_initial", main="Cho_initial ~ Cho_final")
summary(dataset)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(readr)
library(stringr)
library(VIM)
dataset <- read.csv("rawData.csv", na = "NA", colClasses =c(rep("character",2), rep("numeric",2), "character", rep("numeric",7)))
nrow(dataset) #número de variables
dim(dataset) #dimensiones del dataset, nos devuleve el número de registros (filas) y la cantidad de variables (columnas)
names(dataset) #nos devuelve los nombres de las variables del dataset
dataset <- setNames(dataset,tolower(names(dataset)))
names(dataset)
summary(dataset)
dataset$educ_level <- factor(dataset$educ_level)
dataset$job_type <- factor(dataset$job_type)
dataset$sick_leave_b <- factor(dataset$sick_leave_b)
levels(dataset$educ_level)
levels(dataset$job_type)
levels(dataset$sick_leave_b)
levels(dataset$educ_level) <- c("N","P","S","U")
levels(dataset$job_type) <- c("C","PC")
levels(dataset$sick_leave_b) <- c("False", "True")
levels(dataset$educ_level)
levels(dataset$job_type)
levels(dataset$sick_leave_b)
dataset$city <- str_to_title(dataset$city)
dataset$city <- gsub("De","de",dataset$city)
dataset$sex <- toupper(gsub(" ","",dataset$sex,fixed=TRUE))
dataset$sex <- factor(dataset$sex)
levels(dataset$sex)
dataset$happiness <- as.numeric(gsub(",",".",dataset$happiness))
summary(dataset$happiness)
summary(dataset$age)
summary(dataset$seniority)
summary(dataset$sick_leave)
summary(dataset$work_hours)
dataset$work_hours <- abs(dataset$work_hours) #canviamos los valores de la variable por su valor absoluto
summary(dataset$work_hours)
summary(dataset$cho_initial)
summary(dataset$cho_final)
dataset$seniority <- ifelse((dataset$age-dataset$seniority) < 18, dataset$age- 18, dataset$seniority)
dataset$sick_leave_b <- ifelse(dataset$sick_leave > 0, 1, 0)
dataset$sick_leave_b <- factor(dataset$sick_leave_b)
levels(dataset$sick_leave_b) <- c("False", "True")
summary(dataset)
summary(dataset$happiness)
dataset <- kNN(dataset, variable = c("happiness"), k=15, imp_var=FALSE) #k-Nearest Neighbour Imputation
summary(dataset$happiness)
boxplot(dataset$happiness,
main = "Boxplot Hapiness",
xlab= "Hapiness",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$happiness) #mediana
mean(dataset$happiness) #promedio
boxplot(dataset$age,
main = "Age",
xlab= "Age",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$age) #mediana
mean(dataset$age) #promedio
boxplot(dataset$seniority,
main = "Seniority",
xlab= "Seniority",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$seniority) #mediana
mean(dataset$seniority) #promedio
boxplot(dataset$sick_leave,
main = "Sick_leave",
xlab= "Sick_leave",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$sick_leave) #mediana
mean(dataset$sick_leave) #promedio
boxplot(dataset$work_hours,
main = "Work_hors",
xlab= "Work_hors",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
boxplot.stats(dataset$work_hours)
median(dataset$work_hours) #mediana
mean(dataset$work_hours) #promedio
boxplot(dataset$cho_initial,
main = "Cho_initial",
xlab= "Cho_initial",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = FALSE)
median(dataset$cho_initial) #mediana
mean(dataset$cho_initial) #promedio
boxplot(dataset$cho_final,
main = "Cho_final",
xlab= "Cho_final",
ylab= "Workers",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
median(dataset$cho_final) #mediana
mean(dataset$cho_final) #promedio
scatter.smooth(x=dataset$age, y=dataset$happiness, xlab = "Age", ylab = "Happiness", main="Hapiness ~ Age")
scatter.smooth(x=dataset$seniority, y=dataset$happiness, xlab = "Seniority", ylab = "Happiness", main="Hapiness ~ Seniority")
scatter.smooth(x=dataset$sick_leave, y=dataset$happiness, xlab = "Sick Leave", ylab = "Happiness", main="Hapiness ~ Sick Leave")
scatter.smooth(x=dataset$work_hours, y=dataset$happiness, xlab = "Work Hours", ylab = "Happiness", main="Hapiness ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$happiness, xlab = "Cho_initial", ylab = "Happiness", main="Hapiness ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$happiness, xlab = "Cho_final", ylab = "Happiness", main="Hapiness ~ Cho_final")
scatter.smooth(x=dataset$seniority, y=dataset$age, xlab = "Seniority", ylab = "Age", main="Age ~ Seniority")
scatter.smooth(x=dataset$sick_leave, y=dataset$age, xlab = "Sick Leave", ylab = "Age", main="Age ~ Sick Leave")
scatter.smooth(x=dataset$work_hours, y=dataset$age, xlab = "Work Hours", ylab = "Age", main="Age ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$age, xlab = "Cho_initial", ylab = "Age", main="Age ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$age, xlab = "Cho_final", ylab = "Age", main="Age ~ Cho_final")
scatter.smooth(x=dataset$sick_leave, y=dataset$seniority, xlab = "Sick Leave", ylab = "Seniority", main="Seniority ~ Sick Leave")
scatter.smooth(x=dataset$work_hours, y=dataset$seniority, xlab = "Work Hours", ylab = "Seniority", main="Seniority ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$seniority, xlab = "Cho_initial", ylab = "Seniority", main="Seniority ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$seniority, xlab = "Cho_final", ylab = "Seniority", main="Seniority ~ Cho_final")
scatter.smooth(x=dataset$work_hours, y=dataset$sick_leave, xlab = "Work Hours", ylab = "Sick_leave", main="Sick_leave ~ Work Hours")
scatter.smooth(x=dataset$cho_initial, y=dataset$sick_leave, xlab = "Cho_initial", ylab = "Sick_leave", main="Sick_leave ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$sick_leave, xlab = "Cho_final", ylab = "Sick_leave", main="Sick_leave ~ Cho_final")
scatter.smooth(x=dataset$cho_initial, y=dataset$work_hours, xlab = "Cho_initial", ylab = "Work_hours", main="Work_hours ~ Cho_initial")
scatter.smooth(x=dataset$cho_final, y=dataset$work_hours, xlab = "Cho_final", ylab = "Work_hours", main="Work_hours ~ Cho_final")
scatter.smooth(x=dataset$cho_final, y=dataset$cho_initial, xlab = "Cho_final", ylab = "Cho_initial", main="Cho_initial ~ Cho_final")
summary(dataset)
write.csv(dataset, file = "Castilla_datos_preprocesados.csv")
setwd("E:/Universidad/Tipología y ciclo de vida de los datos/Practica_1_XavierCastillaCarbonell/SocialBladeWebScraper/Primera propuesta/output")
library(readr)
TopInfluencers <- read_csv("E:/Universidad/Tipología y ciclo de vida de los datos/Practica_1_XavierCastillaCarbonell/SocialBladeWebScraper/Primera propuesta/output/TopInfluencers.csv")
View(TopInfluencers)
View(TopInfluencers)
